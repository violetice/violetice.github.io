<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>利用Github Action自动化部署Hexo</title>
    <link href="/po/08712ebf88b2/"/>
    <url>/po/08712ebf88b2/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="编写工作流"><a href="#编写工作流" class="headerlink" title="编写工作流"></a>编写工作流</h1><p>由于众所周知的稳定性缘故，所以需要使用同步代理站 <strong>kkgithub.com</strong></p><p>创建完仓库，push 好之后。直接点进 <strong>Action</strong> 栏目，选择 <strong>Node.js</strong> 项目，把代码复制下来。</p><p>然后本地创建文件：.&#x2F;.github&#x2F;workflows&#x2F;hexo.yml</p><p>我这就直接放我测试通过的了。<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[GitHub Actions 入门教程 - 阮一峰的网络日志](https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html)">[1]</span></a></sup><sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[记录一次Hexo持续集成部署尝试-腾讯云开发者社区|Dreamy.TZK](https://cloud.tencent.com/developer/article/1651297)">[2]</span></a></sup><sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="[GitHub Actions 中环境变量使用总结: 配置,读取,传递 | api2o](https://www.api2o.com/zh/blog/github/action-docker-image-environment-variables-summary)">[3]</span></a></sup></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># For more information see: https://docs.kkgithub.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs</span><br><br><span class="hljs-attr">name:</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">Blog</span> <span class="hljs-string">CI</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span> [ <span class="hljs-string">&quot;master&quot;</span> ]<br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">构建</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">静态页</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br><br>    <span class="hljs-attr">strategy:</span><br>      <span class="hljs-attr">matrix:</span><br>        <span class="hljs-attr">node-version:</span> [ <span class="hljs-number">22.</span><span class="hljs-string">x</span> ]<br>        <span class="hljs-comment"># See supported Node.js release schedule at https://nodejs.org/en/about/releases/</span><br><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-number">1</span><span class="hljs-string">.检出</span> <span class="hljs-string">master</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v4</span><br><br>      <span class="hljs-comment"># 设置 NodeJS 环境</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-number">2</span><span class="hljs-string">.设置</span> <span class="hljs-string">NodeJS</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">matrix.node-version</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v4</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">matrix.node-version</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">cache:</span> <span class="hljs-string">&#x27;npm&#x27;</span><br><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-number">3</span><span class="hljs-string">.安装</span> <span class="hljs-string">yarn</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">install</span> <span class="hljs-string">yarn</span> <span class="hljs-string">-g</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-number">4</span><span class="hljs-string">.安装</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">命令行工具</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">yarn</span> <span class="hljs-string">global</span> <span class="hljs-string">add</span> <span class="hljs-string">hexo-cli</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-number">5</span><span class="hljs-string">.缓存</span> <span class="hljs-string">node_modules</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/cache@v4</span><br>        <span class="hljs-attr">id:</span> <span class="hljs-string">cache-yarn</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">./node_modules</span><br>          <span class="hljs-attr">key:</span> <span class="hljs-string">$&#123;&#123;runner.OS&#125;&#125;-$&#123;&#123;hashFiles(&#x27;**/yarn.lock&#x27;)&#125;&#125;</span><br>          <span class="hljs-attr">restore-keys:</span> <span class="hljs-string">|</span><br><span class="hljs-string">            $&#123;&#123;runner.OS&#125;&#125;-$&#123;&#123;hashFiles(&#x27;**/yarn.lock&#x27;)&#125;&#125;</span><br><span class="hljs-string">            $&#123;&#123;runner.OS&#125;&#125;-</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-number">5.1</span><span class="hljs-string">.缓存</span> <span class="hljs-string">public</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/cache@v4</span><br>        <span class="hljs-attr">id:</span> <span class="hljs-string">cache-public</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">./public</span><br>          <span class="hljs-attr">key:</span> <span class="hljs-string">$&#123;&#123;runner.OS&#125;&#125;-public</span><br>          <span class="hljs-attr">restore-keys:</span> <span class="hljs-string">|</span><br><span class="hljs-string">            $&#123;&#123;runner.OS&#125;&#125;-public</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-number">6</span><span class="hljs-string">.配置</span> <span class="hljs-string">gitssh</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">PRIVATE:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GIT_SSH_PRIVATE</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          mkdir -p ~/.ssh/</span><br><span class="hljs-string">          echo &quot;$PRIVATE&quot; &gt; ~/.ssh/github</span><br><span class="hljs-string">          chmod 600 ~/.ssh/github</span><br><span class="hljs-string">          printf &quot;Host github.com\nHostName github.com\nIdentityFile ~/.ssh/github&quot; &gt; ~/.ssh/config</span><br><span class="hljs-string">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class="hljs-string">          git config --global user.name &#x27;$&#123;&#123; secrets.GIT_USER &#125;&#125;&#x27; </span><br><span class="hljs-string">          git config --global user.email &#x27;$&#123;&#123; secrets.GIT_MAIL &#125;&#125;&#x27;</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">if:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">steps.cache-yarn.outputs.cache-hit</span> <span class="hljs-type">!=</span> <span class="hljs-string">&#x27;true&#x27;</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-number">7</span><span class="hljs-string">.初始化Hexo</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">yarn</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-number">8.</span><span class="hljs-string">Hexo构建静态页</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          hexo g</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-number">9.</span><span class="hljs-string">Git</span> <span class="hljs-string">Push</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          git config --global core.autocrlf false</span><br><span class="hljs-string">          hexo deploy</span><br></code></pre></td></tr></table></figure><hr><p>敲黑板，划重点。github库设置（存放 Hexo 源码的库，不是 public 库）</p><table><thead><tr><th>变量名</th><th>含义</th></tr></thead><tbody><tr><td>GIT_SSH_PRIVATE</td><td>git ssh的私钥，直接复制即可</td></tr><tr><td>GIT_USER</td><td>git 用于提交的用户名</td></tr><tr><td>GIT_MAIL</td><td>git 用于提交的邮箱</td></tr></tbody></table><p>跟着下面两张图去找到设置变量的位置，一个一个设置就完事了。</p><p><img src="/po/08712ebf88b2/ed44eb3961da59f1.png" srcset="/img/loading.gif" lazyload class="" title="找到位置"></p><p><img src="/po/08712ebf88b2/image-20250115233143553.png" srcset="/img/loading.gif" lazyload class="" title="设置变量"></p><p>完事直接 push 就可以了。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>我是真服了啊，<strong>deploy</strong> 得另外准备一个库【<strong>&lt;username&gt;.github.io</strong>】才行啊。得强行覆盖了。</p><p><img src="/po/08712ebf88b2/c35abd033691db43.png" srcset="/img/loading.gif" lazyload class="" title="我本地的"></p><p><img src="/po/08712ebf88b2/578427340fad09c2.png" srcset="/img/loading.gif" lazyload class="" title="Github上的"></p><p>【<strong>&lt;username&gt;.github.io</strong>】这个库是关键，博客 pages 服务靠的就是这个库，然后去又拍云做加速。</p><hr><p>体验一下流程就完事了，action 是真不好用，可能是我不太熟悉吧。public 库的 commit 不是连续的，就很难受。还是本地 deploy 来得舒服，关键是可以保留 commit 记录。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html">GitHub Actions 入门教程 - 阮一峰的网络日志</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://cloud.tencent.com/developer/article/1651297">记录一次Hexo持续集成部署尝试-腾讯云开发者社区|Dreamy.TZK</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://www.api2o.com/zh/blog/github/action-docker-image-environment-variables-summary">GitHub Actions 中环境变量使用总结: 配置,读取,传递 | api2o</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Github</tag>
      
      <tag>Hexo</tag>
      
      <tag>自动化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo从5.3.0升级到7.3.0</title>
    <link href="/po/17dbd6f8ef43/"/>
    <url>/po/17dbd6f8ef43/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>那么，开始吧！按照进度一点一点写。<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Hexo 升级 7.0.0 | 三分之七橙](https://umm.js.org/p/3f415d4f/)">[1]</span></a></sup></p><p>环境：Windows 11、NodeJS 20.14、Yarn</p><h1 id="替换package-json"><a href="#替换package-json" class="headerlink" title="替换package.json"></a>替换package.json</h1><p>直接照抄官方<strong>hexo-starter</strong>模板中的<strong>dependencies</strong>模块。<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[hexo-starter/package.json at master · hexojs/hexo-starter · GitHub](https://kkgithub.com/hexojs/hexo-starter/blob/master/package.json)">[2]</span></a></sup></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs diff"># 只是举个例子<br><span class="hljs-addition">+ &quot;hexo&quot;: &quot;^7.3.0&quot;,</span><br><span class="hljs-deletion">- &quot;hexo&quot;: &quot;^5.3.0&quot;,</span><br>...<br><span class="hljs-addition">+ &quot;hexo-generator-archive&quot;: &quot;^2.0.0&quot;,</span><br><span class="hljs-addition">+ &quot;hexo-generator-category&quot;: &quot;^2.0.0&quot;,</span><br><span class="hljs-deletion">- &quot;hexo-generator-archive&quot;: &quot;^1.0.0&quot;,</span><br><span class="hljs-deletion">- &quot;hexo-generator-category&quot;: &quot;^2.0.0&quot;,</span><br></code></pre></td></tr></table></figure><p>删除<code>yarn.lock</code>，完事直接<code>yarn</code>就行。</p><h1 id="升级模板"><a href="#升级模板" class="headerlink" title="升级模板"></a>升级模板</h1><p>我用的是<strong>Fluid</strong>，所以去查<strong>npmjs</strong>。大版本没有变动，上一步已经更新完成了。</p><p>直接修改<strong>package.json</strong>即可</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-addition">+ &quot;hexo-theme-fluid&quot;: &quot;^1.9.8&quot;,</span><br><span class="hljs-deletion">- &quot;hexo-theme-fluid&quot;: &quot;^1.8.7&quot;,</span><br></code></pre></td></tr></table></figure><h2 id="迁移到新模板"><a href="#迁移到新模板" class="headerlink" title="迁移到新模板"></a>迁移到新模板</h2><p>问了防止崩坏，得对模板进行测试。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># Git Bash</span><br><span class="hljs-built_in">cp</span> -r ./node_modules/hexo-theme-fluid/ ./themes/fluid_new<br></code></pre></td></tr></table></figure><p>同时修改<strong>config.yml</strong>的模板配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Extensions</span><br><span class="hljs-comment">## Plugins: https://hexo.io/plugins/</span><br><span class="hljs-comment">## Themes: https://hexo.io/themes/</span><br><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid_new</span><br></code></pre></td></tr></table></figure><p>然后自己慢慢改就是了，让新老模板共存，反复测试一段时间。直到完全没有问题之后，再把老模板给删掉即可。</p><p>之后的上线发布我就不啰嗦了。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://umm.js.org/p/3f415d4f/">Hexo 升级 7.0.0 | 三分之七橙</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://kkgithub.com/hexojs/hexo-starter/blob/master/package.json">hexo-starter&#x2F;package.json at master · hexojs&#x2F;hexo-starter · GitHub</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>折腾</tag>
      
      <tag>升级</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【S4个人】森林牧羊场 1:20.85 为了刷里程被迫练图</title>
    <link href="/po/69c1ea0b462d/"/>
    <url>/po/69c1ea0b462d/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div class="bilibili-player">      <iframe src="//player.bilibili.com/player.html?aid=670904750&bvid=BV1Ha4y1n742&cid=276053719&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="800" height="725"> </iframe>    </div>    <p>游戏：跑跑卡丁车<br>系列：森林<br>地图：牧羊场<br>车辆：玉玺X<br>成绩：01:20:85<br>BGM：泠鸢yousa - 恋爱语音导航<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[【泠鸢/小野道】恋爱语音导航【原创】](https://www.bilibili.com/video/BV1ot41127e6)">[1]</span></a></sup>节选，如有侵权请联系我删除。</p><p>这张图算是手动刷里程最好的，相对不难。单次里程8.4km，记录1:17秒多点，正常跑1:30秒以内都是可以接受的。我现在刷了5小时不到，已经500+km了。</p><p>地图解析：<br>1、第一个弯过去后，面临一个选择，走左还是走右。最佳路线是走右，第一弯拖久一点，然后走两棵树中间。<br>2、经过一个飞坡，落地点控制在“路”的左侧，这样通过第二个弯（直角弯）更加舒服。<br>3、第二个选择口，是直接顺坡下去，还是飞出栅栏。可以尝试飞出栅栏，失误也没关系最后成绩在24-27左右。这里无所谓，我是为了刷成绩。<br>4、连续拖漂弯，这里要求不高，别翻车就行。玉玺X不适合跑这图，特别容易翻，这里做不到极限。<br>5、最后过桥，这里我是没经验的。多练吧，看运气。</p><p>小伙伴们，学废了吗？</p><p>森林系列：<a href="https://space.bilibili.com/20263463/channel/detail?cid=162806">https://space.bilibili.com/20263463/channel/detail?cid=162806</a></p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.bilibili.com/video/BV1ot41127e6">【泠鸢&#x2F;小野道】恋爱语音导航【原创】</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>跑跑卡丁车</category>
      
      <category>森林系列</category>
      
    </categories>
    
    
    <tags>
      
      <tag>牧羊场</tag>
      
      <tag>痕迹视频</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FastAdmin支持php7.4的教程</title>
    <link href="/po/ec5aa96d1934/"/>
    <url>/po/ec5aa96d1934/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>从安装到运行，一条龙走到底。</p><h2 id="1-前置"><a href="#1-前置" class="headerlink" title="1. 前置"></a>1. 前置</h2><p>默认你们已经安装了 <code>NodeJS</code> 和 <code>Composer</code>。</p><p>php命令行版本：7.4.*</p><p>ThinkPHP：5.0.24</p><h3 id="1-1-下载安装"><a href="#1-1-下载安装" class="headerlink" title="1.1. 下载安装"></a>1.1. 下载安装</h3><p><code>&gt;</code>表示执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">设置过国内镜像源的请忽略</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装过bower的请忽略</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">npm i -g bower</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装FastAdmin</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">git <span class="hljs-built_in">clone</span> https://gitee.com/karson/fastadmin.git fa_test</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">cd</span> fa_test</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">bower install</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">composer install</span><br></code></pre></td></tr></table></figure><h3 id="1-2-运行访问"><a href="#1-2-运行访问" class="headerlink" title="1.2. 运行访问"></a>1.2. 运行访问</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">启动FastAdmin</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">php -S 127.0.0.1:8080 -t public</span><br>[Tue Dec  1 19:35:46 2020] PHP 7.4.13 Development Server (http://127.0.0.1:8080) started<br><span class="hljs-meta prompt_"># </span><span class="language-bash">出现如上所述，表示 php 内置 Server 启动成功</span><br></code></pre></td></tr></table></figure><p>打开浏览器，访问<code>http://127.0.0.1:8080</code>出现安装页面。</p><p><img src="/po/ec5aa96d1934/zoBDvJSFVa2WQhx.jpg" srcset="/img/loading.gif" lazyload class=""></p><h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h2><p>数据库，管理员信息填写完成，点击安装。出现如下所述。</p><p><img src="/po/ec5aa96d1934/jPA2T6kozF89Swb.jpg" srcset="/img/loading.gif" lazyload class=""></p><p>php7.4开始不再支持使用花括号 <code>&#123;&#125;</code> 来访问数组和字符串成员。</p><p>出现问题就要解决，把 <code>&#123;&#125;</code> 改成 <code>[]</code> 就可以了。那么改那个文件呢？</p><p>引用一下我的开发三步走，后来人就可以站在前辈们铺好的路上了。</p><blockquote><p>第一步，debug<br>第二步，看文档<br>第三步，翻源码</p></blockquote><h3 id="2-1-开启debug"><a href="#2-1-开启debug" class="headerlink" title="2.1. 开启debug"></a>2.1. 开启debug</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">cp</span> .env.sample .<span class="hljs-built_in">env</span></span><br></code></pre></td></tr></table></figure><p>编辑<code>.env</code>，改成如下内容。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[app]</span><br><span class="hljs-attr">debug</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">trace</span> = <span class="hljs-literal">true</span><br><br><span class="hljs-section">[database]</span><br><span class="hljs-comment"># hostname = 192.168.1.101</span><br><span class="hljs-comment"># database = fastadmin</span><br><span class="hljs-comment"># username = root</span><br><span class="hljs-comment"># password = root</span><br><span class="hljs-comment"># hostport = 3306</span><br><span class="hljs-comment"># prefix = fa_</span><br></code></pre></td></tr></table></figure><h3 id="2-2-找到错误位置"><a href="#2-2-找到错误位置" class="headerlink" title="2.2. 找到错误位置"></a>2.2. 找到错误位置</h3><p>编辑<code>application/admin/command/Install.php: 132-138行</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-variable">$adminName</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">installation</span>(<span class="hljs-variable">$mysqlHostname</span>, <span class="hljs-variable">$mysqlHostport</span>, <span class="hljs-variable">$mysqlDatabase</span>, <span class="hljs-variable">$mysqlUsername</span>, <span class="hljs-variable">$mysqlPassword</span>, <span class="hljs-variable">$mysqlPrefix</span>, <span class="hljs-variable">$adminUsername</span>, <span class="hljs-variable">$adminPassword</span>, <span class="hljs-variable">$adminEmail</span>, <span class="hljs-variable">$siteName</span>);<br>&#125; <span class="hljs-keyword">catch</span> (\PDOException <span class="hljs-variable">$e</span>) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-variable">$e</span>-&gt;<span class="hljs-title function_ invoke__">getMessage</span>());<br>&#125; <span class="hljs-keyword">catch</span> (\<span class="hljs-built_in">Exception</span> <span class="hljs-variable">$e</span>) &#123;<br>    \think<span class="hljs-title class_">\Log</span>::<span class="hljs-title function_ invoke__">error</span>(<span class="hljs-variable">$e</span>); <span class="hljs-comment">// 在这里打印错误日志</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$output</span>(<span class="hljs-number">0</span>, <span class="hljs-variable">$e</span>-&gt;<span class="hljs-title function_ invoke__">getMessage</span>());<br>&#125;<br></code></pre></td></tr></table></figure><p>日志如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php">[ error ] think\exception<span class="hljs-title class_">\ErrorException</span>::<span class="hljs-title function_ invoke__">__set_state</span>(<span class="hljs-keyword">array</span>(<br>   <span class="hljs-string">&#x27;severity&#x27;</span> =&gt; <span class="hljs-number">8192</span>,<br>   <span class="hljs-string">&#x27;data&#x27;</span> =&gt; <br>  <span class="hljs-keyword">array</span> (<br>  ),<br>   <span class="hljs-string">&#x27;message&#x27;</span> =&gt; <span class="hljs-string">&#x27;Array and string offset access syntax with curly braces is deprecated&#x27;</span>,<br>   <span class="hljs-string">&#x27;string&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>   <span class="hljs-string">&#x27;code&#x27;</span> =&gt; <span class="hljs-number">0</span>,<br>   <span class="hljs-string">&#x27;file&#x27;</span> =&gt; <span class="hljs-string">&#x27;thinkphp/library/think/db/Query.php&#x27;</span>,<br>   <span class="hljs-string">&#x27;line&#x27;</span> =&gt; <span class="hljs-number">400</span>,<br>   <span class="hljs-comment">// 后面的就可以忽略了</span><br></code></pre></td></tr></table></figure><p><code>message</code>和安装页的错误提示是一样的</p><p>错误位置是<code>thinkphp/library/think/db/Query.php</code>的400行。</p><p><img src="/po/ec5aa96d1934/vKMZAuOhHLTjQSR.jpg" srcset="/img/loading.gif" lazyload class=""></p><p>找到就可以修改了，把 <code>&#123;&#125;</code> 改成 <code>[]</code> 即可。</p><h3 id="2-3-安装成功"><a href="#2-3-安装成功" class="headerlink" title="2.3. 安装成功"></a>2.3. 安装成功</h3><p>修改完后不用刷新页面，直接点击安装。安装成功！</p><p><img src="/po/ec5aa96d1934/25hO4eo9VLYGJlf.jpg" srcset="/img/loading.gif" lazyload class=""></p><h2 id="3-结尾"><a href="#3-结尾" class="headerlink" title="3. 结尾"></a>3. 结尾</h2><p>简单的用了一下，暂时还没发现别的问题。稳定性待测。</p><p>FastAdmin 支持 php7.4 教程完毕</p><p>Violet_ice紫冰 写于 2020-12-1 21:12:26</p><h2 id="4-番外"><a href="#4-番外" class="headerlink" title="4. 番外"></a>4. 番外</h2><p>写的时候发现了一个小bug。重复安装完成后，由于 <code>$adminName</code> 为空字符串。所以点进入后台是跳到前台的。</p><p>文件<code>application/admin/command/Install.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># 200行</span><br><span class="hljs-variable">$adminFile</span> = ROOT_PATH . <span class="hljs-string">&#x27;public&#x27;</span> . DS . <span class="hljs-string">&#x27;admin.php&#x27;</span>;<br><span class="hljs-comment"># 下面是我加的，都重装了，入口文件还是改个名比较好。</span><br><span class="hljs-comment"># 因为本身工作目录就在public，所以不需要用chdir()。</span><br><span class="hljs-comment"># php的glob能不能使用正则，这一点我没研究明白。有没有懂行的大佬，麻烦告知一下。</span><br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">is_file</span>(<span class="hljs-variable">$adminFile</span>)) &#123;<br>    <span class="hljs-variable">$files</span> = <span class="hljs-title function_ invoke__">glob</span>(<span class="hljs-string">&#x27;*.php&#x27;</span>);<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$files</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$file</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^[a-zA-Z]&#123;10&#125;\.php$/&#x27;</span>, <span class="hljs-variable">$file</span>, <span class="hljs-variable">$flag</span>)) &#123;<br>            <span class="hljs-variable">$adminFile</span> = ROOT_PATH . <span class="hljs-string">&#x27;public&#x27;</span> . DS . <span class="hljs-variable">$flag</span>[<span class="hljs-number">0</span>];<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">unset</span>(<span class="hljs-variable">$files</span>); <span class="hljs-comment">// 数组开销比较大用完就删掉，$file字符串就无所谓了。</span><br>&#125;<br><br><span class="hljs-comment"># 248行</span><br><span class="hljs-variable">$adminName</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">is_file</span>(<span class="hljs-variable">$adminFile</span>)) &#123;<br>    <span class="hljs-variable">$adminName</span> = <span class="hljs-title class_">Random</span>::<span class="hljs-title function_ invoke__">alpha</span>(<span class="hljs-number">10</span>) . <span class="hljs-string">&#x27;.php&#x27;</span>;<br>    <span class="hljs-title function_ invoke__">rename</span>(<span class="hljs-variable">$adminFile</span>, ROOT_PATH . <span class="hljs-string">&#x27;public&#x27;</span> . DS . <span class="hljs-variable">$adminName</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>php</category>
      
    </categories>
    
    
    <tags>
      
      <tag>php7.4</tag>
      
      <tag>FastAdmin</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>人生第好几次想搞博客</title>
    <link href="/po/fc2250e1a4a7/"/>
    <url>/po/fc2250e1a4a7/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>具体是第几次，已经无从考究啦。一直执着于自己写，自己开发博客和 <code>MarkDown</code> 编辑器，但一直碌碌无为。在不写博客我就老了，截止今天（2020-12-22）我已经22岁了，没精力折腾了。这次下定决心啦，直接用成熟的博客产品。访问了几个博客，最终选择了 <a href="https://hexo.io/">Hexo</a> ，以 <a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid</a> 主题作为基础。</p><p>感谢前辈们：<a href="https://www.julydate.com/">七夏浅笑</a>、<a href="https://diygod.me/">DIYdog</a></p><h2 id="约定"><a href="#约定" class="headerlink" title="约定"></a>约定</h2><p><code>&gt;</code> 表示执行 <code>shell</code> 命令</p><p><code>#</code> 表示注释</p><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>我是使用是虚拟机 + Linux宝塔面板，虚拟机和宝塔的安装这里就不赘述了。请看我的教程：【web实战】Linux宝塔面板安装、【web实战】开发环境 - 虚拟机安装。</p><p>Hexo 官网：<a href="https://hexo.io/">https://hexo.io/</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">安装Hexo脚手架</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">npm i -g hexo-cli</span><br><br>+ hexo-cli@4.2.0<br>added 65 packages from 334 contributors in 4.085s<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">进入宝塔web根目录</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">cd</span> /www/wwwroot</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">初始化Hexo项目</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">hexo init example.com</span><br><br>INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git<br>INFO  Install dependencies<br>INFO  Start blogging with Hexo!<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">运行Hexo</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">hexo server -i 0.0.0.0</span><br><br>INFO  Validating config<br>INFO  Start processing<br>INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.<br></code></pre></td></tr></table></figure><p>到此，Hexo就安装完成了。</p><p>但不是我想要的效果，指定<code>ip</code>为<code>0.0.0.0</code>被替换了。</p><h2 id="解决ip问题"><a href="#解决ip问题" class="headerlink" title="解决ip问题"></a>解决ip问题</h2><p>直接翻阅<code>hexo-server</code>源代码，找到了问题所在。</p><p>文件：<code>node_modules/hexo-server/lib/server.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">formatAddress</span>(<span class="hljs-params">ip, port, root</span>) &#123;<br>  <span class="hljs-keyword">let</span> hostname = ip;<br>  <span class="hljs-keyword">if</span> (ip === <span class="hljs-string">&#x27;0.0.0.0&#x27;</span> || ip === <span class="hljs-string">&#x27;::&#x27;</span>) &#123;<br>    hostname = <span class="hljs-string">&#x27;localhost&#x27;</span>;<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> url.<span class="hljs-title function_">format</span>(&#123;<span class="hljs-attr">protocol</span>: <span class="hljs-string">&#x27;http&#x27;</span>, <span class="hljs-attr">hostname</span>: hostname, <span class="hljs-attr">port</span>: port, <span class="hljs-attr">path</span>: root&#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p><code>Hexo</code> 团队为什么这么做呢，可能是为了所谓的安全吧。</p><p>翻阅 <code>server.js</code> 的 <a href="https://github.com/hexojs/hexo-server/commits/2.0.0/lib/server.js">Commit History</a>，找到了对应修改记录。</p><blockquote><p>Commit <a href="https://github.com/hexojs/hexo-server/commit/4103a759e406ed4d9cda123ae6afe8a77f8f9432">4103a759e4</a></p><p><strong>Add options and some improvements</strong></p><ul><li>Add “compress” option: Enable GZIP compression</li><li>Add “header” option: Add “X-Powered-By: Hexo” header</li><li>Display “0.0.0.0” as “localhost”</li><li>Use supertest-promised in tests</li></ul></blockquote><blockquote><p>Commit <a href="https://github.com/hexojs/hexo-server/commit/5efada50abab6d611ad2aaba8a3fb344ebc7b326">5efada50ab</a></p><p><strong>Serve on all interfaces by default</strong></p><p>This commit changes the default value of the <code>--ip</code> option to use<br>Node’s internal resolution. It means that it will try to bind to<br>the unspecified IPv6 address <code>::</code> if available or else fall back to the<br>unspecified IPv4 address <code>0.0.0.0</code>. In most systems, <code>::</code> also binds<br>to <code>0.0.0.0</code> which effectively allows to listen on all interfaces.</p></blockquote><p></p><p>找到了重点：Display “0.0.0.0” as “localhost”</p><p>这个做法就是不让外网访问，为了小白而考虑的所谓的安全。</p><p>不会吧，不会真有人不使用静态访问吧？！</p><p>直接把替换判断注释掉就可以了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">formatAddress</span>(<span class="hljs-params">ip, port, root</span>) &#123;<br>  <span class="hljs-keyword">let</span> hostname = ip;<br>  <span class="hljs-comment">// if (ip === &#x27;0.0.0.0&#x27; || ip === &#x27;::&#x27;) &#123;</span><br>  <span class="hljs-comment">//   hostname = &#x27;localhost&#x27;;</span><br>  <span class="hljs-comment">// &#125;</span><br><br>  <span class="hljs-keyword">return</span> url.<span class="hljs-title function_">format</span>(&#123;<span class="hljs-attr">protocol</span>: <span class="hljs-string">&#x27;http&#x27;</span>, <span class="hljs-attr">hostname</span>: hostname, <span class="hljs-attr">port</span>: port, <span class="hljs-attr">path</span>: root&#125;);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="最终成果"><a href="#最终成果" class="headerlink" title="最终成果"></a>最终成果</h2><p><img src="/po/fc2250e1a4a7/ea1e696ce5841510.jpg" srcset="/img/loading.gif" lazyload class="" title="最终成果"></p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
